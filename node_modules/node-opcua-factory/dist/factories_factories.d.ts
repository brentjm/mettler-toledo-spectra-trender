/**
 * @module node-opcua-factory
 */
import { ExpandedNodeId } from "node-opcua-nodeid";
import { BaseUAObject } from "./factories_baseobject";
import { StructuredTypeSchema } from "./factories_structuredTypeSchema";
declare type BaseUAObjectConstructable = new (options?: any) => BaseUAObject;
export declare type ConstructorFunc = BaseUAObjectConstructable;
export interface ConstructorFuncWithSchema extends ConstructorFunc {
    schema: StructuredTypeSchema;
    encodingDefaultBinary: ExpandedNodeId;
    encodingDefaultXml: ExpandedNodeId;
}
export declare function getStructureTypeConstructor(typeName: string): ConstructorFunc;
export declare function hasStructuredType(typeName: string): boolean;
export declare function getStructuredTypeSchema(typeName: string): StructuredTypeSchema;
export declare function registerFactory(typeName: string, constructor: ConstructorFuncWithSchema): void;
export declare function dump(): void;
export declare function callConstructor(constructor: ConstructorFunc): BaseUAObject;
export declare function getConstructor(expandedNodeId: ExpandedNodeId): ConstructorFunc | null;
export declare function hasConstructor(expandedNodeId: ExpandedNodeId): boolean;
export declare function constructObject(expandedNodeId: ExpandedNodeId): BaseUAObject;
export declare function registerClassDefinition(className: string, classConstructor: ConstructorFuncWithSchema): void;
export {};
